{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ColorPicker } from 'react-native-color-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ColorPickerComponent = function ColorPickerComponent() {\n  var _useState = useState('#ff0000'),\n    _useState2 = _slicedToArray(_useState, 2),\n    color = _useState2[0],\n    setColor = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    showPicker = _useState4[0],\n    setShowPicker = _useState4[1];\n  var onColorChange = function onColorChange(newColor) {\n    setColor(newColor);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: [styles.colorPreview, {\n        backgroundColor: color\n      }]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return setShowPicker(true);\n      },\n      children: _jsx(Text, {\n        style: styles.button,\n        children: \"Selecionar Cor\"\n      })\n    }), showPicker && _jsx(View, {\n      style: styles.pickerContainer,\n      children: _jsx(ColorPicker, {\n        onColorSelected: function onColorSelected(newColor) {\n          onColorChange(newColor);\n          setShowPicker(false);\n        },\n        style: styles.colorPicker,\n        color: color\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  colorPreview: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    marginBottom: 20\n  },\n  button: {\n    fontSize: 18,\n    color: 'blue',\n    marginBottom: 20\n  },\n  pickerContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'white'\n  },\n  colorPicker: {\n    flex: 1\n  }\n});\nexport default ColorPickerComponent;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"absolute\": {\n      \"position\": \"absolute\"\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  topics: {\n    \"container\": [\"width\"]\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","TouchableOpacity","Text","ColorPicker","jsx","_jsx","jsxs","_jsxs","ColorPickerComponent","_useState","_useState2","_slicedToArray","color","setColor","_useState3","_useState4","showPicker","setShowPicker","onColorChange","newColor","style","styles","container","children","colorPreview","backgroundColor","onPress","button","pickerContainer","onColorSelected","colorPicker","create","flex","justifyContent","alignItems","width","height","borderRadius","marginBottom","fontSize","position","bottom","left","right","_NativeWindStyleSheet","atRules","topics"],"sources":["C:/Users/beatr/OneDrive/Área de Trabalho/ppo/create-booknotes/mobile/src/components/ColorPicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native';\r\nimport { ColorPicker } from 'react-native-color-picker';\r\n\r\nconst ColorPickerComponent = () => {\r\n    const [color, setColor] = useState('#ff0000');\r\n    const [showPicker, setShowPicker] = useState(false);\r\n\r\n    const onColorChange = (newColor: React.SetStateAction<string>) => {\r\n        setColor(newColor);\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={[styles.colorPreview, { backgroundColor: color }]} />\r\n\r\n            <TouchableOpacity onPress={() => setShowPicker(true)}>\r\n                <Text style={styles.button}>Selecionar Cor</Text>\r\n            </TouchableOpacity>\r\n\r\n            {showPicker && (\r\n                <View style={styles.pickerContainer}>\r\n                    <ColorPicker\r\n                        onColorSelected={(newColor: any) => {\r\n                            onColorChange(newColor);\r\n                            setShowPicker(false);\r\n                        }}\r\n                        style={styles.colorPicker}\r\n                        color={color}\r\n                    />\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    colorPreview: {\r\n        width: 100,\r\n        height: 100,\r\n        borderRadius: 50,\r\n        marginBottom: 20,\r\n    },\r\n    button: {\r\n        fontSize: 18,\r\n        color: 'blue',\r\n        marginBottom: 20,\r\n    },\r\n    pickerContainer: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        left: 0,\r\n        right: 0,\r\n        backgroundColor: 'white',\r\n    },\r\n    colorPicker: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nexport default ColorPickerComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}